LLVMData
cpp

int 
basic

string
basic

VariableRegister = record {
  name : string,
  version : int
}

Register = variant {
  variableRegister : VariableRegister,
  integerRegister : int,
  null
}

Registers = array of Register

LLVMRegisterData = record {
  lastRegister : Register,
  registers : Registers
}

LLVMBinaryOperationArgument = variant {
  register : Register,
  integer : int
}

LLVMBinaryOperator = variant {
  add, sub, div, mul
}

LLVMBinaryOperation = record {
  outReg : Register,
  lArg : LLVMBinaryOperationArgument,
  rArg : LLVMBinaryOperationArgument,
  bop : LLVMBinaryOperator
}

LLVMInstr = variant {
  binaryOperationInstr : LLVMBinaryOperation,
  printInstr : Register
}

LLVMProgram = array of LLVMInstr